# Generated by Django 5.0.4 on 2024-05-08 21:00

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "dashboard",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Apply", "Limit Applied on a Target"),
                            ("Eval", "Policies Evaluated"),
                        ],
                        max_length=255,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now=True)),
                ("data", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Limit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("int", "Integer"),
                            ("float", "Floating Point"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "operation",
                    models.CharField(
                        choices=[(">", "Greater Than"), ("<", "Less Than")],
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Properties",
            },
        ),
        migrations.CreateModel(
            name="Penalty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="Penalty", max_length=255)),
                (
                    "duration",
                    models.DurationField(
                        default=datetime.timedelta(seconds=300)
                    ),
                ),
                (
                    "repeat_offense_scale",
                    models.FloatField(
                        default=1.0,
                        help_text="How much to scale penalty for repeat offenses (default 1.0)",
                    ),
                ),
                ("limits", models.ManyToManyField(to="arbiter.limit")),
            ],
            options={
                "verbose_name_plural": "Penalties",
            },
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("domain", models.CharField(max_length=1024)),
                ("description", models.TextField(blank=True, max_length=1024)),
                ("query_params", models.JSONField()),
                ("query", models.TextField(blank=True, max_length=1024)),
                (
                    "grace_period",
                    models.DurationField(
                        default=datetime.timedelta(seconds=180)
                    ),
                ),
                (
                    "lookback_window",
                    models.DurationField(
                        default=datetime.timedelta(seconds=10800),
                        help_text="How far back arbiter looks for prior violations to scale penalty (default 3h)",
                    ),
                ),
                (
                    "penalty",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="arbiter.penalty",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Policies",
            },
        ),
        migrations.AddField(
            model_name="limit",
            name="property",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="arbiter.property",
            ),
        ),
        migrations.CreateModel(
            name="Target",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unit", models.CharField(max_length=255)),
                ("host", models.CharField(max_length=255)),
                ("last_applied", models.ManyToManyField(to="arbiter.limit")),
            ],
            options={
                "verbose_name_plural": "Targets",
            },
        ),
        migrations.CreateModel(
            name="Violation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expiration", models.DateTimeField()),
                ("timestamp", models.DateTimeField(auto_now=True)),
                ("offense_count", models.IntegerField(default=1)),
                (
                    "policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="arbiter.policy",
                    ),
                ),
                (
                    "target",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="arbiter.target",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="target",
            constraint=models.UniqueConstraint(
                fields=("unit", "host"), name="unique_target"
            ),
        ),
    ]
